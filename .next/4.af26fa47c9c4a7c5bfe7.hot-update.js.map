{"version":3,"file":"4.af26fa47c9c4a7c5bfe7.hot-update.js","sources":["webpack:///components/IcoDetail.js"],"sourcesContent":["import React from 'react';\nimport {ListGroupItem, Button, FormGroup, FormControl} from 'react-bootstrap';\nimport { default as contract } from 'truffle-contract';\n\nimport { default as Web3} from 'web3'\nimport contractERC20 from '../build/contracts/createERC20_v2.json'\n\nexport default class IcoDetail extends React.Component {\n\n\t/*\n\t* CONSTRUCTOR\n\t*/\n\tconstructor(props){\n        super(props);\n        this.state =({ \n            name: null,\n            openingDate: null,\n            closingDate: null,\n            price: null,\n            token: null,\n        });\n        this.getName = this.getName.bind(this);\n        this.getOpeningDate = this.getOpeningDate.bind(this);\n        this.getClosingDate = this.getClosingDate.bind(this);\n        //this.getPrice = this.getPrice.bind(this);\n        this.transfer = this.transfer.bind(this);\n        this.showInfo = this.showInfo.bind(this);\n             \n    }\n\n    async getName() {\n    \t\n    \tvar name = await this.props.instancia.getICOnameByID.call(this.props.ico);\n    \tthis.setState({name: name});\n\n    }\n\n    async getOpeningDate(){\n    \t\n    \tvar date = await this.props.instancia.getOpeningDateNameByID.call(this.props.ico);    \t\n    \t//console.log(date);\n\n    \tthis.setState({openingDate: date});\n    }\n\n    async getClosingDate(){\n    \t\n    \tvar date = await this.props.instancia.getClosingDateNameByID.call(this.props.ico);    \t\n    \t//console.log(date);\n\n    \tthis.setState({closingDate: date});\n    }\n\n    /*async getPrice() {\n    \t\n    \tvar tprice = await this.props.instancia.getTokenPriceByID.call(this.props.ico);\n    \ttprice = tprice.toNumber();\n    \tthis.setState({price: tprice});\n\n    }*/\n\n    async getTokenName() {\n    \t\n    \tvar token = await this.props.instancia.getTokenAddressByID.call(this.props.ico);   \n\n        var theERC20 = contract(contractERC20);\n        theERC20.setProvider(web3.currentProvider);\n\n        var instance = theERC20.at(token);\n        var tokName = await instance.tokenName();\n        var tokPrice = await instance.buyPrice();\n        var tprice = tokPrice.toNumber();\n    \tthis.setState({\n            token: tokName,\n            price: tprice,\n        });\n\n    }\n\n    transfer(){\n\n        // enviamos al componente lista el ID de la ICO sobre la que se ha pulsado\n        //Ico list enviar√° a index el contratoERC20 de esta ico\n        //console.log(\"TRAZA 1\");\n        //console.log(this.props.ico.toNumber());        \n        this.props.getID(this.props.ico.toNumber());\n\n    }\n\n    showInfo(){\n        this.props.navControl(2);\n        this.props.clickedICO(this.props.ico.toNumber());\n    }\n   \n\n    render(){\n        let ico = this.props.ico;\n        //console.log(this.props.instancia);\n        \n        if(this.state.name == null && this.state.tokenName == null && this.state.openingDate == null){\n            this.getName();\n            this.getTokenName();\n            this.getOpeningDate();\n            this.getClosingDate();\n            //this.getPrice();\n        }\n    \treturn(\n    \t\t<tr>\n                <td><a onClick={this.showInfo}>{this.state.name}</a></td>\n                <td>{this.state.openingDate}</td>\n                <td>{this.state.closingDate}</td>\n                <td>{this.state.token}</td>\n                <td>{this.state.price} ethers/toker</td>\n                <td>                    \n                    <FormGroup id=\"formControlsText\" stule={{width: '50px'}}>\n                        <FormControl ref=\"amount\" type=\"number\" placeholder=\"Amount\" />\n                        <Button onClick={this.transfer}>Buy tokens</Button>\n                    </FormGroup>\n                    \n                </td>\n            </tr>\n    \t);\n\t}\n\n}\n\n\n// WEBPACK FOOTER //\n// components/IcoDetail.js"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;AAEA;;;AAGA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AAdA;AAgBA;AACA;;;;;;;;;;;;;AAGA;AACA;;AADA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AAKA;AACA;;AADA;AACA;AAEA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;AAIA;AACA;;AADA;AACA;AAEA;AAAA;AAAA;AACA;;;;;;;;;;;;;AAEA;AACA;;;;;;;;;;;;;;;;;;AASA;AACA;;AADA;AAEA;AACA;AAEA;;AACA;AACA;;AADA;;AACA;AACA;;AADA;AACA;AACA;AACA;AACA;AAFA;AACA;;;;;;;;;;;;;;;AAMA;AAEA;AACA;AACA;AACA;AACA;AAEA;;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;;;;;;;;AAnHA;AACA;AADA;;;;;;;;;;;;AAAA;;;;;;;;;A","sourceRoot":""}